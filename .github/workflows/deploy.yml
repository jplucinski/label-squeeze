name: Deploy to seohost via FTP

on:
  push:
    tags:
      - "v*.*.*" # Triggers on semantic version tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write # Needed for creating GitHub releases

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper versioning

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Deploying version: $VERSION"

      - name: Update package.json version
        run: |
          npm version ${{ steps.version.outputs.VERSION }} --no-git-tag-version --allow-same-version

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          PUBLIC_APP_VERSION: ${{ steps.version.outputs.VERSION }}

      - name: Deploy to seohost via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ${{ secrets.FTP_ROOT_PATH }}
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Version ${{ steps.version.outputs.VERSION }}

            Deployed to production via FTP.

            **Changes:**
            See commit history for details.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
